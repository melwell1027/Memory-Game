{"version":3,"sources":["photos sync /^/.//.*$","photos/arya.jpg","photos/bran.jpg","photos/cersei.jpg","photos/dany.jpg","photos/jaime.jpg","photos/jonsnow.jpg","photos/jorah.jpg","photos/littlefinger.jpg","photos/nightking.jpg","photos/oberyn.jpg","photos/olenna.jpg","photos/ramsay.jpg","photos/sansa.jpg","photos/theon.jpg","photos/tyrion.jpg","photos/wallpaper.jpg","components/Header.js","components/Tile.js","components/tiles.js","App.js","serviceWorker.js","index.js"],"names":["map","./arya.jpg","./bran.jpg","./cersei.jpg","./dany.jpg","./jaime.jpg","./jonsnow.jpg","./jorah.jpg","./littlefinger.jpg","./nightking.jpg","./oberyn.jpg","./olenna.jpg","./ramsay.jpg","./sansa.jpg","./theon.jpg","./tyrion.jpg","./wallpaper.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","Header","props","react_default","a","createElement","className","message","currentScore","topScore","Tile","onClick","handleTileClick","char","alt","image","replace","src","require","tiles","App","state","_this","forEach","tile","checked","setState","slice","sort","Math","random","_this2","this","i","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cdfb2712.chunk.js","sourcesContent":["var map = {\n\t\"./arya.jpg\": 19,\n\t\"./bran.jpg\": 20,\n\t\"./cersei.jpg\": 21,\n\t\"./dany.jpg\": 22,\n\t\"./jaime.jpg\": 23,\n\t\"./jonsnow.jpg\": 24,\n\t\"./jorah.jpg\": 25,\n\t\"./littlefinger.jpg\": 26,\n\t\"./nightking.jpg\": 27,\n\t\"./oberyn.jpg\": 28,\n\t\"./olenna.jpg\": 29,\n\t\"./ramsay.jpg\": 30,\n\t\"./sansa.jpg\": 31,\n\t\"./theon.jpg\": 32,\n\t\"./tyrion.jpg\": 33,\n\t\"./wallpaper.jpg\": 34\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 18;","module.exports = __webpack_public_path__ + \"static/media/arya.c388a941.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bran.74599d09.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cersei.f6420fa3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dany.8a0bd2f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jaime.5530e139.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jonsnow.6813a52c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jorah.7cf8e4a8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/littlefinger.8a7fcb90.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nightking.594fb2e4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/oberyn.87baec75.jpg\";","module.exports = __webpack_public_path__ + \"static/media/olenna.2468bc56.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ramsay.aba3824a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sansa.4cade7cb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/theon.69e336c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tyrion.e80d63dc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wallpaper.cf895185.jpg\";","import React from \"react\";\n\nexport default function Header(props) {\n    return (\n        <header className=\"inner-container\">\n            <div>Game of Thrones Memory Game</div>\n            <div>{props.message}</div>\n            <div>Current Score: {props.currentScore} | Top Score: {props.topScore}</div>\n        </header>\n    );\n}","import React from \"react\";\n\nexport default function Tile(props) {\n    return (\n        <div className=\"tile\" onClick={() => props.handleTileClick(props.id)}>\n            {props.char}\n            <div className=\"img-container\">\n                <img alt={props.image.replace(\".jpg\", \"\")} src={require(\"../photos/\" + props.image)} />\n            </div>\n        </div>\n    )\n}","const tiles = [\n    { id: 0, image: \"arya.jpg\" },\n    { id: 1, image: \"bran.jpg\" },\n    { id: 2, image: \"cersei.jpg\" },\n    { id: 3, image: \"dany.jpg\" },\n    { id: 4, image: \"jaime.jpg\" },\n    { id: 5, image: \"jonsnow.jpg\" },\n    { id: 6, image: \"jorah.jpg\" },\n    { id: 7, image: \"littlefinger.jpg\" },\n    { id: 8, image: \"nightking.jpg\" },\n    { id: 9, image: \"oberyn.jpg\" },\n    { id: 10, image: \"olenna.jpg\" },\n    { id: 11, image: \"ramsay.jpg\" },\n    { id: 12, image: \"sansa.jpg\" },\n    { id: 13, image: \"theon.jpg\" },\n    { id: 14, image: \"tyrion.jpg\" }\n];\nexport default tiles;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Tile from \"./components/Tile\"\nimport tiles from \"./components/tiles\"\n\nclass App extends Component {\n  state = {\n    currentScore: 0,\n    topScore: 0,\n    message: \"\",\n    tiles\n  }\n\n  handleTileClick = (id) => {\n    // check to see if this has been clicked before\n    this.state.tiles.forEach((tile) => {\n      if (tile.id === id) {\n        if (tile.checked === true) {\n          //reset the game\n          this.setState({ currentScore: 0, message: \"You Lose!\" });\n          this.state.tiles.forEach((tile) => { (tile.checked = false) });\n        } else {\n          tile.checked = true;\n          // update the score\n          this.setState({ currentScore: this.state.currentScore + 1, message: \"\" });\n          // if the score if greater than the top score, update the top score too\n          if (this.state.currentScore >= this.state.topScore) {\n            this.setState({ topScore: this.state.topScore + 1 })\n          }\n        }\n      }\n    });\n    // if they've clicked the tile before, somehow randomize the tiles\n    let tiles = this.state.tiles.slice(0);\n    tiles.sort(() => Math.random() - 0.5);\n    this.setState({ tiles })\n\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <Header\n          currentScore={this.state.currentScore}\n          topScore={this.state.topScore}\n          message={this.state.message}\n        />\n        <div className=\"game-board\">\n          {this.state.tiles.map((tile, i) => <Tile key={i} id={tile.id} handleTileClick={this.handleTileClick} image={tile.image} />)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}